<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bylan.dcybackend.dao.CourseReachDAO">

    <resultMap id="BaseResultMap" type="com.bylan.dcybackend.entity.CourseReach">
        <!--@Table course_reach-->
        <result property="courseId" column="course_id" jdbcType="INTEGER"/>
        <result property="week" column="week" jdbcType="INTEGER"/>
        <result property="courseReachScore" column="course_reach_score" jdbcType="OTHER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modify_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select course_id,
               week,
               course_reach_score,
               create_time,
               modify_time
        from course_reach
        where course_id = #{courseId}
          and week = #{week}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select course_id,
               week,
               course_reach_score,
               create_time,
               modify_time
        from course_reach
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
        course_id, week, course_reach_score, create_time, modify_time
        from course_reach
        <where>
            <if test="courseId != null">
                and course_id = #{courseId}
            </if>
            <if test="week != null">
                and week = #{week}
            </if>
            <if test="courseReachScore != null">
                and course_reach_score = #{courseReachScore}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="courseId" useGeneratedKeys="true">
        insert into course_reach(course_id, week, course_reach_score)
        values (#{courseId}, #{week}, #{courseReachScore})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update course_reach
        <set>
            <if test="courseReachScore != null">
                course_reach_score = #{courseReachScore},
            </if>
        </set>
        where course_id = #{courseId}
        and week = #{week}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from course_reach
        where course_id = #{courseId}
          and week = #{week}
    </delete>

</mapper>