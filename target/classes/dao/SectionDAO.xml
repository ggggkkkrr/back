<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bylan.dcybackend.dao.SectionDAO">

    <resultMap id="BaseResultMap" type="com.bylan.dcybackend.entity.Section">
        <!--@Table section-->
        <result property="sectionId" column="section_id" jdbcType="INTEGER"/>
        <result property="courseId" column="course_id" jdbcType="INTEGER"/>
        <result property="sectionName" column="section_name" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modify_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="getSectionIdByCourseId" resultType="com.bylan.dcybackend.vo.SectionVO">
        select section_id, section_name
        from section
        where course_id = #{courseId}
    </select>

    <select id="getStuCourseByStudentId" resultType="com.bylan.dcybackend.vo.StuCourseVO">
        select course_id, section_id
        from section
        where section_id in
              (select section_id from section_student where student_id = #{studentId})
          and course_id in
              (select course_id from course where course_status = 1)
    </select>

    <select id="getSectionByCourseId" resultMap="BaseResultMap">
        select section_id, course_id, section_name, create_time, modify_time
        from section
        where course_id = #{courseId}
    </select>

    <select id="getCourseIdBySectionId" resultType="java.lang.Long">
        select course_id
        from section
        where section_id = #{sectionId}
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select section_id,
               course_id,
               section_name,
               create_time,
               modify_time
        from section
        where section_id = #{sectionId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select section_id,
               course_id,
               section_name,
               create_time,
               modify_time
        from section limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
        section_id, course_id, section_name, create_time, modify_time
        from section
        <where>
            <if test="sectionId != null">
                and section_id = #{sectionId}
            </if>
            <if test="courseId != null">
                and course_id = #{courseId}
            </if>
            <if test="sectionName != null and sectionName != ''">
                and section_name = #{sectionName}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="modifyTime != null">
                and modify_time = #{modifyTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="sectionId" useGeneratedKeys="true">
        insert into section(course_id, section_name, create_time, modify_time)
        values (#{courseId}, #{sectionName}, #{createTime}, #{modifyTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update section
        <set>
            <if test="courseId != null">
                course_id = #{courseId},
            </if>
            <if test="sectionName != null and sectionName != ''">
                section_name = #{sectionName},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime},
            </if>
        </set>
        where section_id = #{sectionId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from section
        where section_id = #{sectionId}
    </delete>

</mapper>